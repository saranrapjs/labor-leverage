// Code generated by xgen. DO NOT EDIT.

package irsform

// IRS990ScheduleB is Common return document attributes
type IRS990ScheduleB struct {
	DocumentAttributes *DocumentAttributes
	DocumentNameAttr   string `xml:"documentName,attr,omitempty"`
	*IRS990ScheduleBType
}


// TotContriRcvdUpTo1000Ind is For a section 501(c)(7), (8), or (10) organization filing Form 990, or Form 990-EZ, that received from any one contributor, during the year, some contributions for use exclusively for religious, charitable, etc., purposes, but these contributions did not aggregate to more than $1,000
type TotContriRcvdUpTo1000Ind struct {
	TotalContributionsAmtAttr int    `xml:"totalContributionsAmt,attr,omitempty"`
	Value                     string `xml:",chardata"`
}

// IRS990ScheduleBType is Content model for Form 990 Schedule B
type IRS990ScheduleBType struct {
	Organization501cInd            *Organization501cInd                  `xml:"Organization501cInd"`
	Organization4947a1NotPFInd     string                                `xml:"Organization4947a1NotPFInd"`
	Organization527Ind             string                                `xml:"Organization527Ind"`
	Organization501c3ExemptPFInd   string                                `xml:"Organization501c3ExemptPFInd"`
	Organization4947a1TrtdPFInd    string                                `xml:"Organization4947a1TrtdPFInd"`
	Organization501c3TaxablePFInd  string                                `xml:"Organization501c3TaxablePFInd"`
	GeneralRuleInd                 string                                `xml:"GeneralRuleInd,omitempty"`
	SpclRuleMetOne3rdSuprtTestInd  string                                `xml:"SpclRuleMetOne3rdSuprtTestInd,omitempty"`
	TotContriRcvdMore1000Ind       string                                `xml:"TotContriRcvdMore1000Ind,omitempty"`
	TotContriRcvdUpTo1000Ind       *TotContriRcvdUpTo1000Ind             `xml:"TotContriRcvdUpTo1000Ind,omitempty"`
	ContributorInformationGrp      []*ContributorInformationGrpType      `xml:"ContributorInformationGrp,omitempty"`
	NonCashPropertyContributionGrp []*NonCashPropertyContributionGrpType `xml:"NonCashPropertyContributionGrp,omitempty"`
	TotalUnder1000ContributionsAmt int                                   `xml:"TotalUnder1000ContributionsAmt,omitempty"`
	CharitableContributionsDetail  []*CharitableContributionsDetailType  `xml:"CharitableContributionsDetail,omitempty"`
}

// ContributorInformationGrpType is Part I Column (b)
type ContributorInformationGrpType struct {
	ContributorNum            int                 `xml:"ContributorNum"`
	ContributorBusinessName   *BusinessNameType   `xml:"ContributorBusinessName"`
	ContributorPersonNm       string              `xml:"ContributorPersonNm"`
	Paid527j1Ind              string              `xml:"Paid527j1Ind"`
	NameNotApplicableCd       interface{}         `xml:"NameNotApplicableCd"`
	ContributorUSAddress      *USAddressType      `xml:"ContributorUSAddress"`
	ContributorForeignAddress *ForeignAddressType `xml:"ContributorForeignAddress"`
	AddressNotApplicableCd    interface{}         `xml:"AddressNotApplicableCd"`
	TotalContributionsAmt     int                 `xml:"TotalContributionsAmt"`
	PersonContributionInd     string              `xml:"PersonContributionInd,omitempty"`
	PayrollContributionInd    string              `xml:"PayrollContributionInd,omitempty"`
	NoncashContributionInd    string              `xml:"NoncashContributionInd,omitempty"`
}

// NonCashPropertyContributionGrpType is Part II Column (d)
type NonCashPropertyContributionGrpType struct {
	ContributorNum      int    `xml:"ContributorNum"`
	NoncashPropertyDesc string `xml:"NoncashPropertyDesc"`
	FairMarketValueAmt  int    `xml:"FairMarketValueAmt"`
	ReceivedDt          string `xml:"ReceivedDt,omitempty"`
}

// CharitableContributionsDetailType is Part III Column (e)
type CharitableContributionsDetailType struct {
	ContributorNum                 int                 `xml:"ContributorNum"`
	GiftPurposeTxt                 string              `xml:"GiftPurposeTxt"`
	GiftUseTxt                     string              `xml:"GiftUseTxt"`
	HowGiftIsHeldDesc              string              `xml:"HowGiftIsHeldDesc,omitempty"`
	TransfereeNameBusiness         *BusinessNameType   `xml:"TransfereeNameBusiness"`
	TransfereeNameIndividual       string              `xml:"TransfereeNameIndividual"`
	TransfereeUSAddress            *USAddressType      `xml:"TransfereeUSAddress"`
	TransfereeForeignAddress       *ForeignAddressType `xml:"TransfereeForeignAddress"`
	RlnOfTransferorToTransfereeTxt string              `xml:"RlnOfTransferorToTransfereeTxt,omitempty"`
}
