// Code generated by xgen. DO NOT EDIT.

package irsform

// IRS990ScheduleG is Common return document attributes
type IRS990ScheduleG struct {
	DocumentAttributes *DocumentAttributes
	DocumentNameAttr   string `xml:"documentName,attr,omitempty"`
	*IRS990ScheduleGType
}


// IRS990ScheduleGType is Part I Line 3
type IRS990ScheduleGType struct {
	MailSolicitationsInd           string                              `xml:"MailSolicitationsInd,omitempty"`
	EmailSolicitationsInd          string                              `xml:"EmailSolicitationsInd,omitempty"`
	PhoneSolicitationsInd          string                              `xml:"PhoneSolicitationsInd,omitempty"`
	InPersonSolicitationsInd       string                              `xml:"InPersonSolicitationsInd,omitempty"`
	SolicitationOfNonGovtGrantsInd string                              `xml:"SolicitationOfNonGovtGrantsInd,omitempty"`
	SolicitationOfGovtGrantsInd    string                              `xml:"SolicitationOfGovtGrantsInd,omitempty"`
	SpecialFundraisingEventsInd    string                              `xml:"SpecialFundraisingEventsInd,omitempty"`
	AgrmtProfFundraisingActyInd    bool                                `xml:"AgrmtProfFundraisingActyInd,omitempty"`
	FundraiserActivityInfoGrp      []*FundraiserActivityInfoGrpType    `xml:"FundraiserActivityInfoGrp,omitempty"`
	TotalGrossReceiptsAmt          int                                 `xml:"TotalGrossReceiptsAmt,omitempty"`
	TotalRetainedByContractorsAmt  int                                 `xml:"TotalRetainedByContractorsAmt,omitempty"`
	TotalNetToOrganizationAmt      int                                 `xml:"TotalNetToOrganizationAmt,omitempty"`
	LicensedStatesCd               []string                            `xml:"LicensedStatesCd"`
	AllStatesCd                    interface{}                         `xml:"AllStatesCd"`
	FundraisingEventInformationGrp *FundraisingEventInformationGrpType `xml:"FundraisingEventInformationGrp,omitempty"`
	GamingInformationGrp           *GamingInformationGrpType           `xml:"GamingInformationGrp,omitempty"`
	StatesWhereGamingConductedCd   []string                            `xml:"StatesWhereGamingConductedCd,omitempty"`
	LicensedInd                    bool                                `xml:"LicensedInd,omitempty"`
	ExplanationIfNoTxt             string                              `xml:"ExplanationIfNoTxt,omitempty"`
	LicenseSuspendedEtcInd         bool                                `xml:"LicenseSuspendedEtcInd,omitempty"`
	ExplanationIfYesTxt            string                              `xml:"ExplanationIfYesTxt,omitempty"`
	GamingWithNonmembersInd        bool                                `xml:"GamingWithNonmembersInd,omitempty"`
	MemberOfOtherEntityInd         bool                                `xml:"MemberOfOtherEntityInd,omitempty"`
	GamingOwnFacilityPct           float64                             `xml:"GamingOwnFacilityPct,omitempty"`
	GamingOtherFacilityPct         float64                             `xml:"GamingOtherFacilityPct,omitempty"`
	IndividualWithBooksNm          string                              `xml:"IndividualWithBooksNm"`
	PersonsWithBooksName           *BusinessNameType                   `xml:"PersonsWithBooksName"`
	PersonsWithBooksUSAddress      *USAddressType                      `xml:"PersonsWithBooksUSAddress"`
	PersonsWithBooksForeignAddress *ForeignAddressType                 `xml:"PersonsWithBooksForeignAddress"`
	CntrctWith3rdPrtyForGameRevInd bool                                `xml:"CntrctWith3rdPrtyForGameRevInd,omitempty"`
	GamingRevenueReceivedByOrgAmt  int                                 `xml:"GamingRevenueReceivedByOrgAmt,omitempty"`
	GamingRevenueRtnBy3PrtyAmt     int                                 `xml:"GamingRevenueRtnBy3PrtyAmt,omitempty"`
	ThirdPartyPersonNm             string                              `xml:"ThirdPartyPersonNm"`
	ThirdPartyBusinessName         *BusinessNameType                   `xml:"ThirdPartyBusinessName"`
	ThirdPartyUSAddress            *USAddressType                      `xml:"ThirdPartyUSAddress"`
	ThirdPartyForeignAddress       *ForeignAddressType                 `xml:"ThirdPartyForeignAddress"`
	GamingManagerPersonNm          string                              `xml:"GamingManagerPersonNm"`
	GamingManagerBusinessName      *BusinessNameType                   `xml:"GamingManagerBusinessName"`
	GamingManagerCompensationAmt   int                                 `xml:"GamingManagerCompensationAmt,omitempty"`
	GamingManagerServicesProvTxt   string                              `xml:"GamingManagerServicesProvTxt,omitempty"`
	GamingManagerIsDirectorOfcrInd string                              `xml:"GamingManagerIsDirectorOfcrInd,omitempty"`
	GamingManagerIsEmployeeInd     string                              `xml:"GamingManagerIsEmployeeInd,omitempty"`
	GamingManagerIsIndCntrctInd    string                              `xml:"GamingManagerIsIndCntrctInd,omitempty"`
	CharitableDistributionRqrInd   bool                                `xml:"CharitableDistributionRqrInd,omitempty"`
	DistributedAmt                 int                                 `xml:"DistributedAmt,omitempty"`
	SupplementalInformationDetail  []*SupplementalInformationDetail    `xml:"SupplementalInformationDetail,omitempty"`
}

// FundraiserActivityInfoGrpType is Part I Line 2b(vi)
type FundraiserActivityInfoGrpType struct {
	PersonNm                    string              `xml:"PersonNm"`
	OrganizationBusinessName    *BusinessNameType   `xml:"OrganizationBusinessName"`
	USAddress                   *USAddressType      `xml:"USAddress"`
	ForeignAddress              *ForeignAddressType `xml:"ForeignAddress"`
	ActivityTxt                 string              `xml:"ActivityTxt,omitempty"`
	FundraiserControlOfFundsInd bool                `xml:"FundraiserControlOfFundsInd,omitempty"`
	GrossReceiptsAmt            int                 `xml:"GrossReceiptsAmt,omitempty"`
	RetainedByContractorAmt     int                 `xml:"RetainedByContractorAmt,omitempty"`
	NetToOrganizationAmt        int                 `xml:"NetToOrganizationAmt,omitempty"`
}

// FundraisingEventInformationGrpType is Line 11 Column (d)
type FundraisingEventInformationGrpType struct {
	Event1Nm                       string `xml:"Event1Nm,omitempty"`
	GrossReceiptsEvent1Amt         int    `xml:"GrossReceiptsEvent1Amt,omitempty"`
	CharitableContriEvent1Amt      int    `xml:"CharitableContriEvent1Amt,omitempty"`
	GrossRevenueEvent1Amt          int    `xml:"GrossRevenueEvent1Amt,omitempty"`
	CashPrizesEvent1Amt            int    `xml:"CashPrizesEvent1Amt,omitempty"`
	NonCashPrizesEvent1Amt         int    `xml:"NonCashPrizesEvent1Amt,omitempty"`
	RentFacilityCostsEvent1Amt     int    `xml:"RentFacilityCostsEvent1Amt,omitempty"`
	FoodAndBeverageEvent1Amt       int    `xml:"FoodAndBeverageEvent1Amt,omitempty"`
	EntertainmentEvent1Amt         int    `xml:"EntertainmentEvent1Amt,omitempty"`
	OtherDirectExpensesEvent1Amt   int    `xml:"OtherDirectExpensesEvent1Amt,omitempty"`
	Event2Nm                       string `xml:"Event2Nm,omitempty"`
	GrossReceiptsEvent2Amt         int    `xml:"GrossReceiptsEvent2Amt,omitempty"`
	CharitableContriEvent2Amt      int    `xml:"CharitableContriEvent2Amt,omitempty"`
	GrossRevenueEvent2Amt          int    `xml:"GrossRevenueEvent2Amt,omitempty"`
	CashPrizesEvent2Amt            int    `xml:"CashPrizesEvent2Amt,omitempty"`
	NonCashPrizesEvent2Amt         int    `xml:"NonCashPrizesEvent2Amt,omitempty"`
	RentFacilityCostsEvent2Amt     int    `xml:"RentFacilityCostsEvent2Amt,omitempty"`
	FoodAndBeverageEvent2Amt       int    `xml:"FoodAndBeverageEvent2Amt,omitempty"`
	EntertainmentEvent2Amt         int    `xml:"EntertainmentEvent2Amt,omitempty"`
	OtherDirectExpensesEvent2Amt   int    `xml:"OtherDirectExpensesEvent2Amt,omitempty"`
	OtherEventsTotalCnt            int    `xml:"OtherEventsTotalCnt,omitempty"`
	GrossReceiptsOtherEventsAmt    int    `xml:"GrossReceiptsOtherEventsAmt,omitempty"`
	CharitableContriOtherEventsAmt int    `xml:"CharitableContriOtherEventsAmt,omitempty"`
	GrossRevenueOtherEventsAmt     int    `xml:"GrossRevenueOtherEventsAmt,omitempty"`
	CashPrizesOtherEventsAmt       int    `xml:"CashPrizesOtherEventsAmt,omitempty"`
	NonCashPrizesOtherEventsAmt    int    `xml:"NonCashPrizesOtherEventsAmt,omitempty"`
	RentFcltyCostsOtherEventsAmt   int    `xml:"RentFcltyCostsOtherEventsAmt,omitempty"`
	FoodAndBeverageOtherEventsAmt  int    `xml:"FoodAndBeverageOtherEventsAmt,omitempty"`
	EntertainmentOtherEventsAmt    int    `xml:"EntertainmentOtherEventsAmt,omitempty"`
	OthDirectExpnssOtherEventsAmt  int    `xml:"OthDirectExpnssOtherEventsAmt,omitempty"`
	GrossReceiptsTotalAmt          int    `xml:"GrossReceiptsTotalAmt,omitempty"`
	CharitableContributionsTotAmt  int    `xml:"CharitableContributionsTotAmt,omitempty"`
	GrossRevenueTotalEventsAmt     int    `xml:"GrossRevenueTotalEventsAmt,omitempty"`
	CashPrizesTotalEventsAmt       int    `xml:"CashPrizesTotalEventsAmt,omitempty"`
	NonCashPrizesTotalEventsAmt    int    `xml:"NonCashPrizesTotalEventsAmt,omitempty"`
	RentFcltyCostsTotalEventsAmt   int    `xml:"RentFcltyCostsTotalEventsAmt,omitempty"`
	FoodAndBeverageTotalEventsAmt  int    `xml:"FoodAndBeverageTotalEventsAmt,omitempty"`
	EntertainmentTotalEventsAmt    int    `xml:"EntertainmentTotalEventsAmt,omitempty"`
	OthDirectExpnssTotalEventsAmt  int    `xml:"OthDirectExpnssTotalEventsAmt,omitempty"`
	DirectExpenseSummaryEventsAmt  int    `xml:"DirectExpenseSummaryEventsAmt,omitempty"`
	NetIncomeSummaryAmt            int    `xml:"NetIncomeSummaryAmt,omitempty"`
}

// GamingInformationGrpType is Line 8
type GamingInformationGrpType struct {
	GrossRevenueBingoAmt           int     `xml:"GrossRevenueBingoAmt,omitempty"`
	CashPrizesBingoAmt             int     `xml:"CashPrizesBingoAmt,omitempty"`
	NonCashPrizesBingoAmt          int     `xml:"NonCashPrizesBingoAmt,omitempty"`
	RentFacilityCostsBingoAmt      int     `xml:"RentFacilityCostsBingoAmt,omitempty"`
	OtherDirectExpensesBingoAmt    int     `xml:"OtherDirectExpensesBingoAmt,omitempty"`
	VolunteerLaborBingoInd         bool    `xml:"VolunteerLaborBingoInd,omitempty"`
	VolunteerLaborBingoPct         float64 `xml:"VolunteerLaborBingoPct,omitempty"`
	GrossRevenuePullTabsAmt        int     `xml:"GrossRevenuePullTabsAmt,omitempty"`
	CashPrizesPullTabsAmt          int     `xml:"CashPrizesPullTabsAmt,omitempty"`
	NonCashPrizesPullTabsAmt       int     `xml:"NonCashPrizesPullTabsAmt,omitempty"`
	RentFacilityCostsPullTabsAmt   int     `xml:"RentFacilityCostsPullTabsAmt,omitempty"`
	OtherDirectExpensesPullTabsAmt int     `xml:"OtherDirectExpensesPullTabsAmt,omitempty"`
	VolunteerLaborPullTabsInd      bool    `xml:"VolunteerLaborPullTabsInd,omitempty"`
	VolunteerLaborPullTabsPct      float64 `xml:"VolunteerLaborPullTabsPct,omitempty"`
	GrossRevenueOtherGamingAmt     int     `xml:"GrossRevenueOtherGamingAmt,omitempty"`
	CashPrizesOtherGamingAmt       int     `xml:"CashPrizesOtherGamingAmt,omitempty"`
	NonCashPrizesOtherGamingAmt    int     `xml:"NonCashPrizesOtherGamingAmt,omitempty"`
	RentFcltyCostsOtherGamingAmt   int     `xml:"RentFcltyCostsOtherGamingAmt,omitempty"`
	OthDirectExpnssOtherGamingAmt  int     `xml:"OthDirectExpnssOtherGamingAmt,omitempty"`
	VolunteerLaborOtherGamingInd   bool    `xml:"VolunteerLaborOtherGamingInd,omitempty"`
	VolunteerLaborOtherGamingPct   float64 `xml:"VolunteerLaborOtherGamingPct,omitempty"`
	GrossRevenueTotalGamingAmt     int     `xml:"GrossRevenueTotalGamingAmt,omitempty"`
	CashPrizesTotalGamingAmt       int     `xml:"CashPrizesTotalGamingAmt,omitempty"`
	NonCashPrizesTotalGamingAmt    int     `xml:"NonCashPrizesTotalGamingAmt,omitempty"`
	RentFcltyCostsTotalGamingAmt   int     `xml:"RentFcltyCostsTotalGamingAmt,omitempty"`
	OthDirectExpnssTotalGamingAmt  int     `xml:"OthDirectExpnssTotalGamingAmt,omitempty"`
	DirectExpenseSummaryGamingAmt  int     `xml:"DirectExpenseSummaryGamingAmt,omitempty"`
	NetGamingIncomeSummaryAmt      int     `xml:"NetGamingIncomeSummaryAmt,omitempty"`
}
